Hands-On Domain-Driven Design with .NET Core: Tackling complexity in the heart of software by putting DDD principles into practice
by Alexey Zimarev (Author)
4.5 4.5 out of 5 stars    133 ratings
See all formats and editions
Kindle
$28.49
Read with Our Free App
 
Paperback
$41.99 
7 Used from $33.05
11 New from $39.00
Solve complex business problems by understanding users better, finding the right problem to solve, and building lean event-driven systems to give your customers what they really want

Key Features
Apply DDD principles using modern tools such as EventStorming, Event Sourcing, and CQRS
Learn how DDD applies directly to various architectural styles such as REST, reactive systems, and microservices
Empower teams to work flexibly with improved services and decoupled interactions
Book Description
Developers across the world are rapidly adopting DDD principles to deliver powerful results when writing software that deals with complex business requirements. This book will guide you in involving business stakeholders when choosing the software you are planning to build for them. By figuring out the temporal nature of behavior-driven domain models, you will be able to build leaner, more agile, and modular systems.

You'll begin by uncovering domain complexity and learn how to capture the behavioral aspects of the domain language. You will then learn about EventStorming and advance to creating a new project in .NET Core 2.1; you'll also and write some code to transfer your events from sticky notes to C#. The book will show you how to use aggregates to handle commands and produce events. As you progress, you'll get to grips with Bounded Contexts, Context Map, Event Sourcing, and CQRS. After translating domain models into executable C# code, you will create a frontend for your application using Vue.js. In addition to this, you'll learn how to refactor your code and cover event versioning and migration essentials.

By the end of this DDD book, you will have gained the confidence to implement the DDD approach in your organization and be able to explore new techniques that complement what you've learned from the book.

What you will learn
Discover and resolve domain complexity together with business stakeholders
Avoid common pitfalls when creating the domain model
Study the concept of Bounded Context and aggregate
Design and build temporal models based on behavior and not only data
Explore benefits and drawbacks of Event Sourcing
Get acquainted with CQRS and to-the-point read models with projections
Practice building one-way flow UI with Vue.js
Understand how a task-based UI conforms to DDD principles
Who this book is for
This book is for .NET developers who have an intermediate level understanding of C#, and for those who seek to deliver value, not just write code. Intermediate level of competence in JavaScript will be helpful to follow the UI chapters.

Table of Contents
Why Domain-Driven Design
Language and Context
EventStorming
Designing the Model
Implementing the Model
Acting with Commands
Consistency Boundary
Aggregate persistence
CQRS: The read-side
Event Sourcing
Projections
Bounded Context
Splitting the System